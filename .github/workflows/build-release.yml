name: Build and Release

on:
  push:
    branches: [ main, master ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

env:
  JAVA_VERSION: 21

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Set up JDK ${{ env.JAVA_VERSION }}
        uses: actions/setup-java@v4
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: 'microsoft'
          
      - name: Make gradle wrapper executable
        run: chmod +x ./gradlew
        
      - name: Cache Gradle packages
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-
            
      - name: Validate gradle wrapper
        uses: gradle/actions/wrapper-validation@v4
        
      - name: Build with Gradle
        run: ./gradlew clean build
        
      - name: Test with Gradle
        run: ./gradlew test
        continue-on-error: true
        
      - name: Get mod version
        id: mod_version
        run: |
          VERSION=$(grep "mod_version=" gradle.properties | cut -d'=' -f2)
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "Mod version: $VERSION"
          
      - name: List build artifacts
        run: |
          echo "Build artifacts:"
          find build/libs -name "*.jar" -type f -exec ls -la {} \;
          
      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: toriifind-${{ steps.mod_version.outputs.version }}-build-${{ github.run_number }}
          path: build/libs/*.jar
          
      - name: Upload to release (on tag)
        if: startsWith(github.ref, 'refs/tags/v')
        uses: softprops/action-gh-release@v2
        with:
          files: build/libs/*.jar
          name: ToriiFind ${{ steps.mod_version.outputs.version }}
          body: |
            ## 📦 ToriiFind ${{ steps.mod_version.outputs.version }}
            
            ### 📁 下载文件
            - `toriifind-${{ steps.mod_version.outputs.version }}.jar` - 主模组文件
            - `toriifind-${{ steps.mod_version.outputs.version }}-sources.jar` - 源代码（可选）
            
            ### 🚀 安装方法
            1. 确保已安装 Fabric Loader
            2. 将 jar 文件放入 `.minecraft/mods` 文件夹
            3. 启动游戏即可使用
            
            ### 📋 系统要求
            - Minecraft: 1.21.4
            - Fabric Loader: 0.16.13+
            - Java: 21+
            
            ---
            *自动构建于 ${{ github.event.head_commit.timestamp }}*
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  publish-snapshot:
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Set up JDK ${{ env.JAVA_VERSION }}
        uses: actions/setup-java@v4
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: 'microsoft'
          
      - name: Make gradle wrapper executable
        run: chmod +x ./gradlew
        
      - name: Cache Gradle packages
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-
            
      - name: Build snapshot
        run: ./gradlew clean build
        
      - name: Get mod version
        id: mod_version
        run: |
          VERSION=$(grep "mod_version=" gradle.properties | cut -d'=' -f2)
          SNAPSHOT_VERSION="${VERSION}-SNAPSHOT-$(date +%Y%m%d)-$(git rev-parse --short HEAD)"
          echo "version=$SNAPSHOT_VERSION" >> $GITHUB_OUTPUT
          echo "Snapshot version: $SNAPSHOT_VERSION"
          
      - name: Rename snapshot files
        run: |
          cd build/libs
          for file in *.jar; do
            if [[ $file != *"sources"* ]]; then
              mv "$file" "toriifind-${{ steps.mod_version.outputs.version }}.jar"
            else
              mv "$file" "toriifind-${{ steps.mod_version.outputs.version }}-sources.jar"
            fi
          done
          
      - name: Upload snapshot artifacts
        uses: actions/upload-artifact@v4
        with:
          name: toriifind-snapshot-${{ github.run_number }}
          path: build/libs/*.jar
          retention-days: 30
